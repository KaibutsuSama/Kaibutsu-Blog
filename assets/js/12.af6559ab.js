(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{337:function(t,s,a){"use strict";a.r(s);var r=a(3),n=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("本文只浅析C++STL的一些基本概念，不会涉及到具体的实现细节，后期可能会读读"),s("code",[t._v("《STL源码剖析》")]),t._v("这本书，再写一篇文章。")])]),t._v(" "),s("h2",{attrs:{id:"stl的概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stl的概述"}},[t._v("#")]),t._v(" STL的概述")]),t._v(" "),s("p",[t._v("C++ STL是标准库的一个部分，设计理念是"),s("code",[t._v("泛型编程")]),t._v(",通过模板来实现通用的数据结构和算法")]),t._v(" "),s("p",[t._v("STL主要包含以下几个组件")]),t._v(" "),s("ol",[s("li",[t._v("容器，类似于Vector，List，Deque，Set，Map等，主要是提供数据结构，存储和组织数据")]),t._v(" "),s("li",[t._v("算法，类似于Sort，Search，Copy，Erase等，主要是提供一些常用的算法，对容器中的数据进行操作")]),t._v(" "),s("li",[t._v("迭代器，类似于指针，主要是提供一种统一的访问容器中数据的方式，可以在容器中进行顺序访问、反向访问以及随机访问等操作。")]),t._v(" "),s("li",[t._v("函数对象，是一种重载了函数调用运算符的对象，它可以像函数一样被调用")]),t._v(" "),s("li",[t._v("适配器，提供了一种在不改变原有接口的情况下，对容器或迭代器进行改变的方式。")])]),t._v(" "),s("h2",{attrs:{id:"聊聊容器的类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#聊聊容器的类型"}},[t._v("#")]),t._v(" 聊聊容器的类型")]),t._v(" "),s("p",[t._v("序列容器维护元素的线性顺序，关联容器维护元素的有序性，而无序关联容器维护元素的无序性。")]),t._v(" "),s("p",[t._v("容器适配器提供了特定接口的封装，以便实现特定行为，例如栈和队列的操作。")]),t._v(" "),s("p",[t._v("序列容器包括：vector，deque，list，forward_list，array")]),t._v(" "),s("p",[t._v("关联容器包括：set，multiset，map，multimap")]),t._v(" "),s("p",[t._v("无序关联容器包括：unordered_set，unordered_multiset，unordered_map，unordered_multimap")]),t._v(" "),s("p",[t._v("容器适配器包括：stack，queue，priority_queue")]),t._v(" "),s("h3",{attrs:{id:"为什么string不属于序列容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么string不属于序列容器"}},[t._v("#")]),t._v(" 为什么String不属于序列容器")]),t._v(" "),s("p",[s("code",[t._v("std::String")]),t._v("算是一种字符序列容器，尽管"),s("code",[t._v("std::String")]),t._v("某些程度上拥有序列容器的行为，比如通过索引访问字符，迭代遍历字符串")]),t._v(" "),s("p",[t._v("相比别的容器，"),s("code",[t._v("std::String")]),t._v("的实现是基于"),s("code",[t._v("character数组")]),t._v("，并且多了一些类似于字符串拼接的操作。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("字符串操作的简单例子")]),t._v(" "),s("div",{staticClass:"language-cpp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<string>")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("string str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Ash"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str length is: "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 长度")]),t._v("\n  std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str first character is: "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个字符")]),t._v("\n  str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"是一个大帅哥"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字符串拼接")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* str length is: 3\n* str first character is: A\n* Ash是一个大帅哥\n*/")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br")])])]),t._v(" "),s("h2",{attrs:{id:"vector和array的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vector和array的区别"}},[t._v("#")]),t._v(" Vector和Array的区别")]),t._v(" "),s("p",[s("code",[t._v("std::vector")]),t._v("和"),s("code",[t._v("std::array")]),t._v("都是序列容器，但是它们之间有一些区别")]),t._v(" "),s("ol",[s("li",[t._v("动态大小， "),s("code",[t._v("std::vector")]),t._v("的大小可以在运行时改变，而"),s("code",[t._v("std::array")]),t._v("的大小是固定的,"),s("code",[t._v("std::array")]),t._v("在编译时确定大小，创建时指定大小")]),t._v(" "),s("li",[t._v("内存分配， "),s("code",[t._v("std::vector")]),t._v("使用堆内存，"),s("code",[t._v("std::array")]),t._v("使用栈内存，"),s("code",[t._v("std::vector")]),t._v("的内存分配是动态的，"),s("code",[t._v("std::array")]),t._v("的内存分配是静态的")]),t._v(" "),s("li",[t._v("使用的选择，"),s("code",[t._v("std::array")]),t._v("的功能相对较少，主要支持通过索引直接访问元素，没有内置的插入、删除或管理函数。需要手动编写代码来处理数组的操作。主要问题还是麻烦，不像"),s("code",[t._v("std::vector")]),t._v("自带成员函数和操作符重载，使得元素的插入、删除、访问和管理更加方便\n"),s("code",[t._v("std::vector")]),t._v(" 是一个灵活、动态大小的容器，适用于需要动态调整大小和灵活管理元素的情况。"),s("code",[t._v("std::array")]),t._v("适用于已知大小且不需要动态调整的情况，对于直接访问元素并进行高性能操作更为适合。")]),t._v(" "),s("li",[t._v("性能考虑，"),s("code",[t._v("std::array")]),t._v(" 通常比 "),s("code",[t._v("std::vector")]),t._v(" 更快。这是因为 "),s("code",[t._v("std::array")]),t._v(" 是一个固定大小的连续内存块，而 "),s("code",[t._v("std::vector")]),t._v(" 是一个动态大小的数组，可能需要重新分配和复制元素来管理容量的变化。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);