(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{338:function(t,v,_){"use strict";_.r(v);var a=_(3),s=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("blockquote",[v("p",[t._v("文章的理解是在我阅读C++Primer第五册过程中的学习笔记，主要记录之前第一次学习的缺漏，以及对一些知识点的理解。")])]),t._v(" "),v("h2",{attrs:{id:"main-函数的返回值"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#main-函数的返回值"}},[t._v("#")]),t._v(" Main 函数的返回值")]),t._v(" "),v("p",[t._v("在大多数系统中，main的返回值被用来指示状态，返回值为"),v("code",[t._v("0")]),t._v("表示成功，非0的返回值的含义由系统定义，通常用来指出错误类型。")]),t._v(" "),v("h2",{attrs:{id:"左值引用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#左值引用"}},[t._v("#")]),t._v(" 左值引用")]),t._v(" "),v("p",[t._v("C++11 新增引用，也就是右值引用，主要用作与内置类，而本节讨论左引用")]),t._v(" "),v("p",[t._v("引用及别名，初始化变量的过程中，初始值会被拷贝到新建的对象中，而引用则是将变量名和初始值绑定在一起，而不是拷贝。引用必须初始化")]),t._v(" "),v("p",[t._v("引用并非对象，只是为了一个存在对象取别名。也因此，不能定义引用的引用。")]),t._v(" "),v("p",[t._v("引用只能绑定在对象上，不能绑定在字面值或者表达式上，因为字面值和表达式并非对象。")]),t._v(" "),v("h2",{attrs:{id:"指针和引用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#指针和引用"}},[t._v("#")]),t._v(" 指针和引用")]),t._v(" "),v("ol",[v("li",[t._v("引用不是一个对象，而是别名，指针是一个对象")]),t._v(" "),v("li",[t._v("引用只能指向一个对象，不能指向一个字面值或者表达式，指针可以指向一个对象，也可以指向一个字面值或者表达式。")]),t._v(" "),v("li",[t._v("空值：指针可以具有空值（nullptr），表示指向无效或未初始化的内存。引用必须始终引用一个有效的对象，不允许为空。")])]),t._v(" "),v("p",[t._v("指针应该处于一下4个状态")]),t._v(" "),v("ol",[v("li",[t._v("指向一个对象")]),t._v(" "),v("li",[t._v("指向紧邻对象所占空间的下一个位置")]),t._v(" "),v("li",[t._v("空指针，指针没有指向任何对象")]),t._v(" "),v("li",[t._v("无效指针，也就是上述情况之外的其他值")])]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),v("p",[t._v("初始化所有的指针，定义为nullptr或者0，使用未经初始化的指针是程序报错的重大原因之一。")])])])}),[],!1,null,null,null);v.default=s.exports}}]);